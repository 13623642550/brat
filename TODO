CLIENT:
check: vars rowSpacing and lineSpacing appear to have no effect

SERVER:
git the data
    CLIENT, SERVER:
    undo

CLIENT:
error handling
    first enumerate actions which fail to do so

CLIENT:
put forms near cursor

CLIENT:
displayMessage with multiple messages

CLIENT:
access keys -> keypress handler
(take care to only listen for the active form)

recursive delete
    confirmation?

SERVER:
use 'edit' parameter to distinguish new arcs from old ones

SERVER:
when deleting a span, delete all dependent modifications

CLIENT:
restrict edit choices in edit span menu
    Sampo: get a clear spec what can be edited and what can't

SERVER:
don't create duplicate trigger textbounds for events; delete trigger
textbound when the last referring event is deleted.

SERVER:
session handling

GIT:
  BIG PROBLEM:
    git branches only work with full directories!
    thus, each file needs to be in a directory alone (!)

  initialize repo to a nice value
    git init
    git add <file>
    git branch -m master <first_branch_id>
  get the list:
    git log --oneline --decorate --oneline --all --topo-order
    OR
    git log --oneline --decorate --oneline --all --graph
  UI still murky :)
  change to branch tip:
    git checkout <branch_id>
  change to non-branch-tip:
    git checkout -b <new_branch_id> <commit_id>
  get all current branches (so that we can get new branch id):
    git branch | cut -c3-

Look for alternate proposal
  our own version control?
    on save: write down the diff, the parent, the committer
    to change place in the tree:
      go up the tree:
        patch -R <file> <patch>
      go down the tree:
        patch <file> <patch>
    undo:
      just up a level
    to display the change tree:
      get all edits sorted by date
      if parent is root, tree.push(edit)
      else treenodes[edit.parent_id].push(edit)
      treenodes[edit.id] = edit
