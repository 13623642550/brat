# -*- Mode: Text; tab-width: 8; indent-tabs-mode: nil; coding: utf-8; -*-
# vim:set ft=conf ts=2 sw=2 sts=2 autoindent:

# Simple text-based definition of a hierarchial ontology of 
# binary relation types.

Equiv	Arg1:Gene_or_gene_product, Arg2:Gene_or_gene_product
Equiv	Arg1:Cell_type, Arg2:Cell_type
Equiv	Arg1:Drug_or_compound, Arg2:Drug_or_compound
Equiv	Arg1:Other_pharmaseutical_agent, Arg2:Other_pharmaseutical_agent
Equiv	Arg1:Pathway, Arg2:Pathway
Equiv	Arg1:Tissue, Arg2:Tissue

# Permitted entity nestings. Defines which entity mention spans in
# text can be contained in which by type. Arg1 identifies the type of
# the inner, Arg2 the type of the outer entity.

ENTITY-NESTING	Arg1:Cell_type, Arg2:Tissue
ENTITY-NESTING	Arg1:Tissue, Arg2:Cell_type
ENTITY-NESTING	Arg1:Gene_or_gene_product, Arg2:Tissue
ENTITY-NESTING	Arg1:Gene_or_gene_product, Arg2:Cell_type
ENTITY-NESTING	Arg1:Gene_or_gene_product, Arg2:Pathway
ENTITY-NESTING	Arg1:Gene_or_gene_product, Arg2:Drug_or_compound
ENTITY-NESTING	Arg1:Gene_or_gene_product, Arg2:Other_pharmaceutical_agent

# Currently allowing anything for the non-specific types
ENTITY-NESTING	Arg1:<ANY>, Arg2:Other
ENTITY-NESTING	Arg1:<ANY>, Arg2:Not_sure
ENTITY-NESTING	Arg1:<ANY>, Arg2:Other_entity
ENTITY-NESTING	Arg1:<ANY>, Arg2:Not_sure_entity
